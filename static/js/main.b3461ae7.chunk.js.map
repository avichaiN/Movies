{"version":3,"sources":["view/components/renderMovies.js","api/fetchTrending.js","view/components/LoadingCircle.js","view/components/Movies.js","view/components/renderMoreInfoMovie.js","api/fetchMoreInfoMovie.js","view/components/MovieMoreInfo.js","view/components/Title.js","api/fetchUpComingMovies.js","api/fetchPopularMovies.js","view/components/TrendingMoviesButton.js","view/components/UpComingMoviesButton.js","view/components/PopularMoviesButton.js","view/components/renderFoundMovies.js","api/fetchSearch.js","view/components/Search.js","view/components/Navbar.js","App.js","index.js"],"names":["renderMovies","setMovies","setDisplaySearch","setMoreInfo","setMoreInfoId","movies","moviesMap","map","movie","className","alt","title","src","poster","onClick","movieId","IMDB","trendingMovies","fetchTreningMoviePoster","a","fetch","then","r","json","response","push","length","fetchTrendingMovies","console","log","results","movie_results","splice","setTimeout","forEach","imdb_id","LoadingCircle","Movies","props","foundMovies","renderMoreInfoMovie","movieInfo","movieImg","setMovieInfo","movieGenres","genres","join","movieDirectors","directors","movieStars","stars","slice","imdb_rating","year","description","fetchMoreInfoMoviePoster","fetchMoreInfoMovie","MovieMoreInfo","moreInfoId","showMoreInfo","useState","movieMoreInfo","useEffect","Title","upComingMovies","fetchUpComingMoviesPoster","fetchUpComingMovies","popularMovies","fetchPopularMoviesPoster","fetchPopularMovies","TrendingMoviesButton","setTrending","UpComingMoviesButton","setUpComing","PopularMoviesButton","setPopular","renderFoundMovies","undefined","Poster","Type","imdbID","fetchMoviesBySearch","searchedMovies","Search","SearchBar","onSubmit","e","preventDefault","target","children","searchedMovie","value","setSubTitle","placeholder","reset","type","aria-label","name","Navbar","href","App","displaySearch","subTitle","firstRender","setFirstRender","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b3461ae7.chunk.js","sourcesContent":["const renderMovies = (setMovies, setDisplaySearch, setMoreInfo, setMoreInfoId, movies) => {\r\n        const handleMoreInfo = (movieId) => {\r\n        setMoreInfo(true)\r\n        setMoreInfoId(movieId)\r\n    }\r\n\r\n    const moviesMap = movies.map(movie => {\r\n        return (\r\n            <div className='singleMovie card' key={movie.IMDB}>\r\n                <img className='card-img-top' alt={movie.title} src={movie.poster} />\r\n                <div className='card-body'>\r\n                    <h4 className='card-title'>{movie.title}</h4>\r\n                </div>\r\n                <div className='card-body'>\r\n                    <button onClick={() => handleMoreInfo(movie.IMDB)} className='btn btn-primary m-auto'>More info</button>\r\n                </div>\r\n            </div>\r\n        )\r\n    })\r\n    setDisplaySearch(true)\r\n    setMovies(moviesMap)\r\n}\r\nexport default renderMovies","import renderMovies from '../view/components/renderMovies'\r\nlet trendingMovies = []\r\nconst fetchTrendingMovies = (setMovies, setDisplaySearch, setMoreInfo, setMoreInfoId) => {\r\n\r\n    console.log('in fetch trending')\r\n    fetch(\"https://movies-tvshows-data-imdb.p.rapidapi.com/?type=get-trending-movies&limit=10\", {\r\n        \"method\": \"GET\",\r\n        \"headers\": {\r\n            \"x-rapidapi-key\": \"b409cd8af1mshbcaed3005a81a3bp157457jsnee4ece4ea8bd\",\r\n            \"x-rapidapi-host\": \"movies-tvshows-data-imdb.p.rapidapi.com\"\r\n        }\r\n    })\r\n        .then(r => r.json())\r\n        .then(response => {\r\n            const results = response.movie_results\r\n            results.splice(results.length - 15);\r\n            trendingMovies = []\r\n            setTimeout(() => {\r\n                results.forEach(movie => {\r\n                    fetchTreningMoviePoster(movie.imdb_id, setMovies, setDisplaySearch, setMoreInfo, setMoreInfoId)\r\n                })\r\n            }, 1000);\r\n        })\r\n}\r\n\r\nconst fetchTreningMoviePoster = async (movieId, setMovies, setDisplaySearch, setMoreInfo, setMoreInfoId) => {\r\n    await fetch(`https://movies-tvshows-data-imdb.p.rapidapi.com/?type=get-movies-images-by-imdb&imdb=${movieId}`, {\r\n        \"method\": \"GET\",\r\n        \"headers\": {\r\n            \"x-rapidapi-key\": \"b409cd8af1mshbcaed3005a81a3bp157457jsnee4ece4ea8bd\",\r\n            \"x-rapidapi-host\": \"movies-tvshows-data-imdb.p.rapidapi.com\"\r\n        }\r\n    })\r\n        .then(r => r.json())\r\n        .then(response => {\r\n            trendingMovies.push(response)\r\n        })\r\n\r\n    if (trendingMovies.length === 5) {\r\n        renderMovies(setMovies, setDisplaySearch, setMoreInfo, setMoreInfoId, trendingMovies)\r\n    }\r\n}\r\n\r\nexport default fetchTrendingMovies","const LoadingCircle = () => {\r\n    return(<div className=\"load\"></div>)\r\n}\r\nexport default LoadingCircle;","const Movies = (props) => {    \r\n    return (<div className='movies'>{props.foundMovies}</div>)\r\n}\r\n\r\nexport default Movies","const renderMoreInfoMovie = (movieInfo, movieImg, setMovieInfo, setMoreInfo) => {\r\n    const movieGenres = movieInfo.genres.join(', ')\r\n    const movieDirectors = movieInfo.directors.join(', ')\r\n\r\n    const movieStarsR = movieInfo.stars.slice(0, 10)\r\n    const movieStars = movieStarsR.join(', ')\r\n\r\n    const handleCloseMoreInfo = () => {\r\n        setMoreInfo(false)\r\n        setMovieInfo('')\r\n    }\r\n    setMovieInfo(\r\n        <div className=\"card moreInfoCard\">\r\n            <div className='row'>\r\n                <div className='col-sm-3 moreInfoImg'>\r\n                    <img src={movieImg} className=\"card-img-top\" alt=\"...\" />\r\n                </div>\r\n                <div className='col-sm-9 mt-1'>\r\n                    <div className=\"card-body\">\r\n                        <h5 className=\"card-title\">Title: {movieInfo.title}</h5>\r\n                        <p className=\"card-text\">IMDB Rating: {movieInfo.imdb_rating}</p>\r\n                        <p className=\"card-text\">Genres: {movieGenres}</p>\r\n                        <p className=\"card-text\">Published Year: {movieInfo.year}</p>\r\n                        <p className=\"card-text\">Description: {movieInfo.description}</p>\r\n                        <p className=\"card-text\">Main actors: {movieStars}</p>\r\n                        <p className=\"card-text\">Directors: {movieDirectors}</p>\r\n                        <button className='btn btn-primary' onClick={handleCloseMoreInfo}>Close</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default renderMoreInfoMovie","import renderMoreInfoMovie from '../view/components/renderMoreInfoMovie'\r\nconst fetchMoreInfoMovie = (movieId, setMovieInfo, setMoreInfo) => {\r\n\r\n    fetch(`https://movies-tvshows-data-imdb.p.rapidapi.com/?type=get-movie-details&imdb=${movieId}`, {\r\n        \"method\": \"GET\",\r\n        \"headers\": {\r\n            \"x-rapidapi-key\": \"b409cd8af1mshbcaed3005a81a3bp157457jsnee4ece4ea8bd\",\r\n            \"x-rapidapi-host\": \"movies-tvshows-data-imdb.p.rapidapi.com\"\r\n        }\r\n    })\r\n        .then(r => r.json())\r\n        .then(response => {\r\n            fetchMoreInfoMoviePoster(movieId, response, setMovieInfo, setMoreInfo)\r\n            renderMoreInfoMovie(response, setMovieInfo, setMoreInfo)\r\n        })\r\n}\r\nconst fetchMoreInfoMoviePoster = (movieId, movieInfo, setMovieInfo, setMoreInfo) => {\r\n    fetch(`https://movies-tvshows-data-imdb.p.rapidapi.com/?type=get-movies-images-by-imdb&imdb=${movieId}`, {\r\n        \"method\": \"GET\",\r\n        \"headers\": {\r\n            \"x-rapidapi-key\": \"b409cd8af1mshbcaed3005a81a3bp157457jsnee4ece4ea8bd\",\r\n            \"x-rapidapi-host\": \"movies-tvshows-data-imdb.p.rapidapi.com\"\r\n        }\r\n    })\r\n        .then(r => r.json())\r\n        .then(response => {\r\n            const movieImg = response.poster\r\n            renderMoreInfoMovie(movieInfo,movieImg, setMovieInfo, setMoreInfo)\r\n\r\n        })\r\n}\r\nexport default fetchMoreInfoMovie","import React, { useState, useEffect } from 'react';\r\nimport fetchMoreInfoMovie from '../../api/fetchMoreInfoMovie'\r\n\r\n\r\nconst MovieMoreInfo = ({ moreInfoId, setMoreInfo, showMoreInfo }) => {\r\n    const [movieMoreInfo, setMovieInfo] = useState('')\r\n\r\n    useEffect(() => {\r\n        if (showMoreInfo === true) {\r\n\r\n            fetchMoreInfoMovie(moreInfoId, setMovieInfo, setMoreInfo)\r\n        }\r\n    }, [showMoreInfo])\r\n\r\n    return (\r\n        <div>\r\n            {movieMoreInfo}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MovieMoreInfo","const Title = () => {\r\n\r\n    return (<h1 className='mainTitle'>Search for Movies</h1>)\r\n}\r\n\r\nexport default Title","import renderMovies from '../view/components/renderMovies'\r\nlet upComingMovies = []\r\nconst fetchUpComingMovies = (setMovies, setDisplaySearch, setMoreInfo, setMoreInfoId) => {\r\n    fetch(\"https://movies-tvshows-data-imdb.p.rapidapi.com/?type=get-upcoming-movies&page=1\", {\r\n        \"method\": \"GET\",\r\n        \"headers\": {\r\n            \"x-rapidapi-key\": \"b409cd8af1mshbcaed3005a81a3bp157457jsnee4ece4ea8bd\",\r\n            \"x-rapidapi-host\": \"movies-tvshows-data-imdb.p.rapidapi.com\"\r\n        }\r\n    })\r\n        .then(r => r.json())\r\n        .then(response => {\r\n            const results = response.movie_results\r\n            results.splice(results.length - 10);\r\n            upComingMovies = []\r\n            setTimeout(() => {\r\n                results.forEach(movie => {\r\n                    fetchUpComingMoviesPoster(movie.imdb_id, setMovies, setDisplaySearch, setMoreInfo, setMoreInfoId)\r\n                })\r\n            }, 1000);\r\n        })\r\n}\r\nconst fetchUpComingMoviesPoster = async (movieId, setMovies, setDisplaySearch, setMoreInfo, setMoreInfoId) => {\r\n    await fetch(`https://movies-tvshows-data-imdb.p.rapidapi.com/?type=get-movies-images-by-imdb&imdb=${movieId}`, {\r\n        \"method\": \"GET\",\r\n        \"headers\": {\r\n            \"x-rapidapi-key\": \"b409cd8af1mshbcaed3005a81a3bp157457jsnee4ece4ea8bd\",\r\n            \"x-rapidapi-host\": \"movies-tvshows-data-imdb.p.rapidapi.com\"\r\n        }\r\n    })\r\n        .then(r => r.json())\r\n        .then(response => {\r\n            upComingMovies.push(response)\r\n        })\r\n\r\n    if (upComingMovies.length === 10) {\r\n        renderMovies(setMovies, setDisplaySearch, setMoreInfo, setMoreInfoId, upComingMovies)\r\n    }\r\n}\r\nexport default fetchUpComingMovies","import renderMovies from '../view/components/renderMovies'\r\n\r\nlet popularMovies = []\r\n\r\nconst fetchPopularMovies = (setMovies, setDisplaySearch, setMoreInfo, setMoreInfoId) => {\r\n    fetch(\"https://movies-tvshows-data-imdb.p.rapidapi.com/?type=get-popular-movies&page=1&year=2020\", {\r\n        \"method\": \"GET\",\r\n        \"headers\": {\r\n            \"x-rapidapi-key\": \"b409cd8af1mshbcaed3005a81a3bp157457jsnee4ece4ea8bd\",\r\n            \"x-rapidapi-host\": \"movies-tvshows-data-imdb.p.rapidapi.com\"\r\n        }\r\n    })\r\n        .then(r => r.json())\r\n        .then(response => {\r\n            const results = response.movie_results\r\n            results.splice(results.length - 10);\r\n            popularMovies = []\r\n            setTimeout(() => {\r\n                results.forEach(movie => {\r\n                    fetchPopularMoviesPoster(movie.imdb_id, setMovies, setDisplaySearch, setMoreInfo, setMoreInfoId)\r\n                })\r\n            }, 1000);\r\n        })\r\n}\r\nconst fetchPopularMoviesPoster = async (movieId, setMovies, setDisplaySearch, setMoreInfo, setMoreInfoId) => {\r\n    await fetch(`https://movies-tvshows-data-imdb.p.rapidapi.com/?type=get-movies-images-by-imdb&imdb=${movieId}`, {\r\n        \"method\": \"GET\",\r\n        \"headers\": {\r\n            \"x-rapidapi-key\": \"b409cd8af1mshbcaed3005a81a3bp157457jsnee4ece4ea8bd\",\r\n            \"x-rapidapi-host\": \"movies-tvshows-data-imdb.p.rapidapi.com\"\r\n        }\r\n    })\r\n        .then(r => r.json())\r\n        .then(response => {\r\n            popularMovies.push(response)\r\n        })\r\n\r\n    if (popularMovies.length === 10) {\r\n        renderMovies(setMovies, setDisplaySearch, setMoreInfo, setMoreInfoId, popularMovies)\r\n    }\r\n}\r\nexport default fetchPopularMovies","const TrendingMoviesButton = ({ setTrending, trendingMovies }) => {\r\n    return (\r\n        <div>\r\n                <button className='nav-link btn' onClick={() => setTrending(!trendingMovies)}>Trending</button>\r\n        </div>\r\n    )\r\n}\r\nexport default TrendingMoviesButton","const UpComingMoviesButton = ({ setMovies, setUpComing, upComingMovies }) => {\r\n\r\n    const handleUpComing = () => {\r\n        setUpComing(!upComingMovies)\r\n    }\r\n\r\n    return (<button className='nav-link btn' onClick={handleUpComing}>Upcoming</button>)\r\n}\r\nexport default UpComingMoviesButton","const PopularMoviesButton = ({ setMovies, popularMovies, setPopular }) => {\r\n\r\n    const handlePopular = () => {\r\n        setPopular(!popularMovies)\r\n    }\r\n\r\n    return (<button className='nav-link btn' onClick={handlePopular}>Popular</button>)\r\n\r\n}\r\nexport default PopularMoviesButton","const renderFoundMovies = (setMovies, movies, setMoreInfo, setMoreInfoId, setDisplaySearch) => {\r\n\r\n    const handleMoreInfo = (movieId) => {\r\n        setMoreInfo(true)\r\n        setMoreInfoId(movieId)\r\n    }\r\n\r\n    if (movies !== undefined) {\r\n        const moviesMap = movies.map((movie) => {\r\n\r\n            if (movie.Poster === 'N/A' || movie.Type === 'series') {\r\n                return null\r\n            }\r\n            return (\r\n                <div className='singleMovie card' key={movie.imdbID}>\r\n                    <img className='card-img-top' alt={movie.Title} src={movie.Poster} />\r\n                    <div className='card-body'>\r\n                        <h4 className='card-title'>{movie.Title}</h4>\r\n                    </div>\r\n                    <div className='card-body'>\r\n                        <button onClick={() => handleMoreInfo(movie.imdbID)} className='btn btn-primary m-auto'>More info</button>\r\n                    </div>\r\n                </div>\r\n            )\r\n        })\r\n        setDisplaySearch(true)\r\n        setMovies(moviesMap)\r\n    } else {\r\n        setDisplaySearch(true)\r\n        setMovies(<div>No Results Found!</div>)\r\n    }\r\n}\r\nexport default renderFoundMovies","import renderFoundMovies from '../view/components/renderFoundMovies'\r\n\r\n\r\nconst fetchMoviesBySearch = (setMovies, searchedMovies, setMoreInfo, setMoreInfoId, setDisplaySearch) => {\r\n\r\n    fetch(`https://movie-database-imdb-alternative.p.rapidapi.com/?s=${searchedMovies}&page=1&r=json`, {\r\n        \"method\": \"GET\",\r\n        \"headers\": {\r\n            \"x-rapidapi-key\": \"b409cd8af1mshbcaed3005a81a3bp157457jsnee4ece4ea8bd\",\r\n            \"x-rapidapi-host\": \"movie-database-imdb-alternative.p.rapidapi.com\"\r\n        }\r\n    })\r\n        .then(r => r.json())\r\n        .then(response => {\r\n            const results = response.Search\r\n            renderFoundMovies(setMovies, results, setMoreInfo, setMoreInfoId, setDisplaySearch)\r\n        })\r\n}\r\n\r\nexport default fetchMoviesBySearch","import fetchMoviesBySearch from '../../api/fetchSearch'\r\n\r\nconst SearchBar = (props) => {\r\n\r\n    const handleSearchMovie = (e) => {\r\n        e.preventDefault()\r\n        const searchedMovies = e.target.children.searchedMovie.value\r\n\r\n        if (searchedMovies.length >= 2) {\r\n            props.setDisplaySearch(false)\r\n            props.setMovies('')\r\n            fetchMoviesBySearch(props.setMovies, searchedMovies, props.setMoreInfo, props.setMoreInfoId, props.setDisplaySearch)\r\n            props.setSubTitle(`Movies that match: ${searchedMovies}`)\r\n            props.setMoreInfo(false)\r\n            e.target.children.searchedMovie.placeholder = 'Movie'\r\n            e.target.reset()\r\n        } else {\r\n            e.target.reset()\r\n            e.target.children.searchedMovie.placeholder = 'Must be more then 2 characters.'\r\n        }\r\n    }\r\n    return (\r\n        <form className=\"d-flex search\" onSubmit={handleSearchMovie}>\r\n            <input className=\"form-control me-2\" type=\"search\" placeholder=\"Movie\" aria-label=\"Search\" name='searchedMovie' />\r\n            <button className=\"btn btn-outline-success\" type=\"submit\">Search</button>\r\n        </form>\r\n    )\r\n}\r\nexport default SearchBar;","import TrendingMoviesButton from './TrendingMoviesButton'\r\nimport UpComingMoviesButton from './UpComingMoviesButton'\r\nimport PopularMoviesButton from './PopularMoviesButton'\r\nimport SearchBar from './Search.js'\r\n\r\n\r\nconst Navbar = ({ setMovies, setTrending, trendingMovies, popularMovies, setPopular, setUpComing, upComingMovies, setMoreInfo, setMoreInfoId, setDisplaySearch, setSubTitle }) => {\r\n\r\n\r\n    return (\r\n        <div className='navbar navbar-expand-lg navbar-light bg-light'>\r\n            <div className=\"container-fluid\">\r\n                <a className=\"navbar-brand\" href=\"#\">Movies</a>\r\n                <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n                    <li className=\"nav-item\">\r\n                        <TrendingMoviesButton setTrending={setTrending} trendingMovies={trendingMovies} />\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <PopularMoviesButton setMovies={setMovies} popularMovies={popularMovies} setPopular={setPopular} />\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <UpComingMoviesButton setMovies={setMovies} setUpComing={setUpComing} upComingMovies={upComingMovies} />\r\n                    </li>\r\n                </ul>\r\n                <SearchBar setMovies={setMovies} setMoreInfo={setMoreInfo} setMoreInfoId={setMoreInfoId} setDisplaySearch={setDisplaySearch} setSubTitle={setSubTitle} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Navbar","import React, { useState, useEffect } from 'react';\nimport fetchTrendingMovies from './api/fetchTrending'\nimport LoadingCircle from './view/components/LoadingCircle'\nimport Movies from './view/components/Movies'\nimport MovieMoreInfo from './view/components/MovieMoreInfo'\nimport Title from './view/components/Title'\nimport fetchUpComingMovies from './api/fetchUpComingMovies'\nimport fetchPopularMovies from './api/fetchPopularMovies'\nimport Navbar from './view/components/Navbar'\n\nfunction App() {\n\n  const [foundMovies, setMovies] = useState('')\n  const [displaySearch, setDisplaySearch] = useState(false)\n  const [subTitle, setSubTitle] = useState('')\n  const [showMoreInfo, setMoreInfo] = useState(false)\n  const [moreInfoId, setMoreInfoId] = useState('')\n  const [trendingMovies, setTrending] = useState(false)\n  const [upComingMovies, setUpComing] = useState(false)\n  const [popularMovies, setPopular] = useState(false)\n  const [firstRender, setFirstRender] = useState(true)\n\n\n  useEffect(() => {\n    setFirstRender(false)\n  }, [])\n\n  useEffect(() => {\n    setMovies('')\n    setSubTitle('Trending Movies')\n    setMoreInfo(false)\n    setDisplaySearch(false)\n    fetchTrendingMovies(setMovies, setDisplaySearch, setMoreInfo, setMoreInfoId)\n  }, [trendingMovies])\n\n  useEffect(() => {\n    if (!firstRender) {\n      setMovies('')\n      setSubTitle('Up Coming Movies')\n      setMoreInfo(false)\n      setDisplaySearch(false)\n      fetchUpComingMovies(setMovies, setDisplaySearch, setMoreInfo, setMoreInfoId)\n    }\n  }, [upComingMovies])\n\n  useEffect(() => {\n    if (!firstRender) {\n      setMovies('')\n      setSubTitle('Popular Movies')\n      setMoreInfo(false)\n      setDisplaySearch(false)\n      fetchPopularMovies(setMovies, setDisplaySearch, setMoreInfo, setMoreInfoId)\n    }\n  }, [popularMovies])\n\n  return (\n    <div className=\"App\">\n      <Title />\n      <Navbar\n        setTrending={setTrending}\n        trendingMovies={trendingMovies}\n        setMovies={setMovies}\n        popularMovies={popularMovies}\n        setPopular={setPopular}\n        setUpComing={setUpComing}\n        upComingMovies={upComingMovies}\n        setMoreInfo={setMoreInfo}\n        setMoreInfoId={setMoreInfoId}\n        setDisplaySearch={setDisplaySearch}\n        setSubTitle={setSubTitle}\n      />\n      {\n        displaySearch\n          ?\n          <div>\n            <h3 className='subTitle'>{subTitle}</h3>\n          </div>\n          :\n          <LoadingCircle />\n      }\n      {\n        !showMoreInfo\n          ?\n          <Movies\n            foundMovies={foundMovies}\n            setMovies={setMovies}\n            setDisplaySearch={setDisplaySearch}\n            setMoreInfo={setMoreInfo}\n            setMoreInfoId={setMoreInfoId}\n          />\n          :\n          <MovieMoreInfo moreInfoId={moreInfoId} setMoreInfo={setMoreInfo} showMoreInfo={showMoreInfo} setSubTitle={setSubTitle} />\n      }\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport '../src/view/dist/index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}